[{"name":"app.R","content":"# Installer les packages si ce n'est pas déjà fait\n# install.packages(c(\"shiny\", \"dplyr\", \"highcharter\"))\n\n# Charger les packages\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(highcharter)\nlibrary(here)\n\n# Charger les données\ndata <- read.csv2(here(\"data\", \"preds.csv\"), stringsAsFactors = FALSE)\ndata <- mutate(data, horse_label = paste0(saddle, '-', horseName))\ndata <- mutate(data, course_label = paste0(C_number, ' - ', C_name))\n\n# Définir l'interface utilisateur Shiny\nui <- fluidPage(\n  titlePanel(\"Analyse des probabilités de gagner\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Filtres\n      selectInput(\"hippodrome\", \"Choisissez un hippodrome\", choices = unique(data$R_name)),\n      uiOutput(\"course_filter\") \n      \n      \n    ),\n    \n    mainPanel(\n      # Graphique Highcharter\n      highchartOutput(\"mychart\")\n    )\n  )\n)\n\n# Définir le serveur Shiny\nserver <- function(input, output) {\n  \n  # Mettre à jour les options du filtre de course en fonction de l'hippodrome sélectionné\n  output$course_filter <- renderUI({\n    selected_hippodrome <- input$hippodrome\n    courses <- unique(filter(data, R_name == selected_hippodrome)$course_label)\n    selectInput(\"course_filter\", \"Choisissez une course\", choices = courses)\n  })\n  \n  # Fonction de filtrage des données\n  filtered_data <- reactive({\n    filter(data, R_name == input$hippodrome, course_label == input$course_filter)\n  })\n  \n  # Réaction pour mettre à jour les données filtrées\n  observeEvent(input$update, {\n    filtered_data()\n  })\n  \n  # Créer le graphique Highcharter\n  output$mychart <- renderHighchart({\n    filtered <- filtered_data()\n    \n    if (nrow(filtered) == 0) {\n      return(NULL)\n    }\n    \n    hc = highchart() %>%\n      hc_chart(type = \"bar\") %>%\n      hc_yAxis(title = list(text = \"Probabilité de gagner\")) %>%\n      hc_xAxis(categories = filtered$horse_label, title = list(text = \"Cheval\")) %>%\n      hc_add_series(\n        name = \"Probabilité de gagner\",\n        data = filtered$.pred_win,\n        dataLabels = list(\n          enabled = TRUE,\n          formatter = JS(\"function() { return Highcharts.numberFormat(this.y * 100, 2) + '%'; }\")\n        )\n      )\n    \n    hc\n  })\n}\n\n# Lancer l'application Shiny\nshinyApp(ui, server)\n","type":"text"}]
